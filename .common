# bc memorizing unix extraction commands is hard work
extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1       ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }

py_project () {
    # create dir structure
    mkdir $1; cd $1
    cp -rf ~/.skeletons/python/* .
    mv PROJECT $1
    mv bin/PROJECT bin/$1
    # replace placeholder text
    sed -i -e "s/PROJECT/$1/g" $1/test/test_main.py
    sed -i -e "s/PROJECT/$1/g" setup.py
    # clean up
    find . -name "*.swp" -type f -delete
    find . -name "*.py-e" -type f -delete
}

# Takes a number of directies to go up, e.g. up 4 == cd ../../../..
up () {
  local d=""
  limit=$1
  for ((i=1 ; i <= limit ; i++))
    do
      d=$d/..
    done
  d=$(echo $d | sed 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
}

# send an email with a compressed version of a file to myself. requires mutt.
#backup () {
#    if [ -z $1 ]; then
#        echo "No such file or directory"
#    else
#        OUT="`echo $USER`.tar.gz"
#        tar -zcvf backup.tar.gz $1
#        echo "$1 backup" | mutt -s "$1 backup" -a backup.tar.gz --maxdelgiudice@gmail.com
#        rm backup.tar.gz
#    fi
#}


# ghc-pkg-reset
# Removes all install GHC/cabal packages, but not binaries, docs, etc.
# Leave dependency hell behind.
function ghc-pkg-reset() {
    read -p 'erasing all your user ghc and cabal packages - are you sure (y/n) ?' ans
    test x$ans == xy && ( \
        echo 'erasing directories under ~/.ghc'; rm -rf `find ~/.ghc -maxdepth 1 -type d`; \
        echo 'erasing ~/.cabal/lib'; rm -rf ~/.cabal/lib; \
        )
}
